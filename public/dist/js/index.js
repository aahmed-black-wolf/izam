class Dropdown{dropdownButton;dropdownMenu;selectedOption;dropdownItems;constructor(e,t,n,o){this.dropdownButton=document.querySelector(e),this.dropdownMenu=document.querySelector(t),this.selectedOption=document.querySelector(n),this.dropdownItems=document.querySelectorAll(o),this.init()}init(){this.dropdownButton.addEventListener("click",(()=>this.toggleMenu())),this.dropdownItems.forEach((e=>e.addEventListener("click",(()=>this.selectItem(e))))),document.addEventListener("click",(e=>this.closeIfClickedOutside(e)))}toggleMenu(){this.dropdownMenu.classList.toggle("hidden")}selectItem(e){this.dropdownItems.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),this.selectedOption.textContent=e.dataset.value,this.dropdownMenu.classList.add("hidden")}closeIfClickedOutside(e){this.dropdownButton.contains(e.target)||this.dropdownMenu.contains(e.target)||this.dropdownMenu.classList.add("hidden")}}class AsideMenu{buttons;constructor(e){this.buttons=document.querySelectorAll(e),this.init()}init(){this.buttons.forEach((e=>{e.addEventListener("click",(()=>this.toggleSubmenu(e)))}))}toggleSubmenu(e){const t=e.getAttribute("data-toggle"),n=document.getElementById(t);if(n){n.classList.toggle("hidden");const t=e.querySelector(".arrow");n.classList.contains("hidden")?t&&(t.innerHTML='<img src="./public/icons/arrow-down.svg" alt=""/>'):t&&(t.innerHTML='<img src="./public/icons/arrow-up.svg" alt=""/>')}}}class JobList{jobListElement;constructor(e){this.jobListElement=document.querySelector(e),this.generateJobs()}generateRandomJobData(){return{title:this.getRandomValue(["Senior UX UI Designer","Frontend Developer","Backend Engineer","Product Manager","Data Scientist","QA Engineer"]),company:this.getRandomValue(["Egabi","Google","Microsoft","Meta","Amazon","Netflix"]),location:this.getRandomValue(["Cairo, Egypt","New York, USA","London, UK","Berlin, Germany","Paris, France","Sydney, Australia"]),timePosted:this.getRandomValue(["month ago","2 weeks ago","10 days ago","5 days ago","yesterday","3 months ago"]),experience:this.getRandomValue(["0 - 3y of exp","3 - 5y of exp","5 - 7y of exp","7 - 10y of exp","10+ years"]),jobType:this.getRandomValue(["Full time","Part time","Freelance","Contract"]),workFormat:this.getRandomValue(["Hybrid","Remote","On-site"]),field:this.getRandomValue(["Creative / Design","IT / Software development","Engineering","Marketing","Operations"]),companyLogo:this.getRandomValue(["./public/assets/company-1.png","./public/assets/company-2.png","./public/assets/company-3.png"])}}getRandomValue(e){return e[Math.floor(Math.random()*e.length)]}generateJobs(){for(let e=0;e<6;e++){const t=this.generateRandomJobData(),n=this.createJobCard(t,e);this.jobListElement.insertAdjacentHTML("beforeend",n)}}createJobCard(e,t){return`\n      <div class="job-card ${0===t?" active-card":""}">\n        <div class="job-content">\n          <div class="job-details">\n            <div style="gap: 0" class="flex">\n              <div class="job-image">\n                <img src="${e.companyLogo}" alt="Company Logo" />\n              </div>\n              <div>\n                <h2>${e.title}</h2>\n                <a href="#">${e.company}</a>\n              </div>\n            </div>\n\n            <div class="location">\n              <span>üìç ${e.location}</span>\n              <span>‚Ä¢</span>\n              <span style="gap: 4px" class="flex">\n                <img width="12px" height="12px" src="./public/icons/date.svg" alt="Date icon" />\n                ${e.timePosted}\n              </span>\n            </div>\n            <div class="tags">\n              <span>${e.experience}</span>\n              <span>${e.jobType}</span>\n              <span>${e.workFormat}</span>\n            </div>\n            <div class="h-divider my-xl"></div>\n            <p>${e.field}</p>\n          </div>\n        </div>\n\n        <div class="favorite">\n          <button class="favorite-button">\n            <img src="./public/icons/heart.svg" alt="Favorite" />\n          </button>\n        </div>\n      </div>\n    `}}class AsideToggle{asideElement;toggleButton;asideCloseElement;constructor(e,t,n){this.asideElement=document.querySelector(e),this.asideCloseElement=document.querySelector(n),this.toggleButton=document.querySelector(t),this.init()}init(){this.toggleButton.addEventListener("click",(()=>this.toggleAside())),this.asideCloseElement.addEventListener("click",(()=>this.closeAside()))}toggleAside(){this.asideElement.classList.toggle("open")}closeAside(){this.asideElement.classList.remove("open")}}class MenuToggle{menuElement;profileButton;overlayElement;constructor(e,t,n){this.menuElement=document.querySelector(e),this.profileButton=document.querySelector(t),this.overlayElement=document.querySelector(n),this.init()}init(){this.profileButton.addEventListener("click",(()=>this.toggleMenu())),this.overlayElement.addEventListener("click",(()=>this.closeMenu()))}toggleMenu(){this.menuElement.classList.toggle("open")}closeMenu(){this.menuElement.classList.remove("open")}}document.addEventListener("DOMContentLoaded",(()=>{new Dropdown(".dropdown-button",".dropdown-menu",".selected-option",".dropdown-item"),new AsideToggle("aside",".aside-toggle-btn",".aside-close-btn"),new AsideMenu(".button-rest[data-toggle]"),new JobList(".job-list"),new MenuToggle(".side-menu",".profile-btn",".user-info")}));